{"ast":null,"code":"var _jsxFileName = \"E:\\\\Freelancer\\\\Github\\\\caroPlay\\\\client\\\\src\\\\pages\\\\UserHomePage\\\\components\\\\MainBoard\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useAppSelector } from '../../../../store/hook';\nimport { CurrentRoom } from './board_component/currentRoom';\nimport { BoardElement, Container } from './elements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MainBoard = ({\n  socket\n}) => {\n  _s();\n\n  // const { isLoading, errorMessage, socket } = useSocket('game');\n  const currentRoom = useAppSelector(state => state.game.currentRoom);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: currentRoom && socket ? /*#__PURE__*/_jsxDEV(CurrentRoom, {\n      socket: socket,\n      currentRoom: currentRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(BoardElement // isLoading={isLoading}\n    // errorMessage={errorMessage}\n    , {\n      socket: socket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainBoard, \"5VFWDocx1O12gK9liShrcCttl0Q=\", false, function () {\n  return [useAppSelector];\n});\n\n_c = MainBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainBoard\");","map":{"version":3,"sources":["E:/Freelancer/Github/caroPlay/client/src/pages/UserHomePage/components/MainBoard/index.tsx"],"names":["React","useAppSelector","CurrentRoom","BoardElement","Container","MainBoard","socket","currentRoom","state","game"],"mappings":";;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AAIA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,YAAxC;;AAMA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwC;AAAA;;AAC/D;AACA,QAAMC,WAAW,GAAGN,cAAc,CAC/BO,KAAD,IAAsBA,KAAK,CAACC,IAAN,CAAWF,WADD,CAAlC;AAIA,sBACE,QAAC,SAAD;AAAA,cACGA,WAAW,IAAID,MAAf,gBACC,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEA,MAArB;AAA6B,MAAA,WAAW,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC,QAAC,YAAD,CACE;AACA;AAFF;AAGE,MAAA,MAAM,EAAED;AAHV;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAnBM;;GAAMD,S;UAESJ,c;;;KAFTI,S","sourcesContent":["import React, { useState } from 'react';\r\nimport { Socket } from 'socket.io-client';\r\nimport { useSocket } from '../../../../hooks/useSocket';\r\nimport { RootState } from '../../../../store';\r\nimport { useAppSelector } from '../../../../store/hook';\r\nimport { CurrentRoom } from './board_component/currentRoom';\r\nimport { BoardElement, Container } from './elements';\r\n\r\ninterface PropTypes {\r\n  socket: Socket | undefined;\r\n}\r\n\r\nexport const MainBoard = ({ socket }: PropTypes): JSX.Element => {\r\n  // const { isLoading, errorMessage, socket } = useSocket('game');\r\n  const currentRoom = useAppSelector(\r\n    (state: RootState) => state.game.currentRoom\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      {currentRoom && socket ? (\r\n        <CurrentRoom socket={socket} currentRoom={currentRoom} />\r\n      ) : (\r\n        <BoardElement\r\n          // isLoading={isLoading}\r\n          // errorMessage={errorMessage}\r\n          socket={socket}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}