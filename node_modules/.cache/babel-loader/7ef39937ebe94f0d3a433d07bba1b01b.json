{"ast":null,"code":"var _jsxFileName = \"E:\\\\Freelancer\\\\Github\\\\caroPlay\\\\client\\\\src\\\\pages\\\\UserHomePage\\\\components\\\\GlobalChat\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { useAppDispatch, useAppSelector } from '../../../../store/hook';\nimport { Messages, ChatForm, ChatMessage, Container, Input, Header, HeaderChoice, SubmitButton, SenderAndTime, Sender, Time, Content, Leaderboards, LeaderboardsItem, Win, Place, Info, Name, Statistic, WinRate } from './elements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GlobalChat = ({\n  socket\n}) => {\n  _s();\n\n  const messages = useAppSelector(state => state.chat.messages);\n  const me = useAppSelector(state => {\n    var _state$auth$userInfo;\n\n    return (_state$auth$userInfo = state.auth.userInfo) === null || _state$auth$userInfo === void 0 ? void 0 : _state$auth$userInfo.username;\n  });\n  const [input, setInput] = useState('');\n  const [display, setDisplay] = useState(true);\n  const leaderboard = useAppSelector(state => state.leaderBoards);\n  const dispatch = useAppDispatch();\n\n  const handleSendMessage = event => {\n    event.preventDefault();\n    socket === null || socket === void 0 ? void 0 : socket.emit('global_chat', {\n      sender: me,\n      content: input\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: {\n          isSelected: display\n        },\n        children: /*#__PURE__*/_jsxDEV(HeaderChoice, {\n          onClick: () => {\n            setDisplay(true);\n          },\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: {\n          isSelected: !display\n        },\n        children: /*#__PURE__*/_jsxDEV(HeaderChoice, {\n          onClick: () => {\n            setDisplay(false);\n          },\n          children: \"Leaderboards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), display ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Messages, {\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(ThemeProvider, {\n          theme: {\n            isMyMessage: me === message.sender\n          },\n          children: /*#__PURE__*/_jsxDEV(ChatMessage, {\n            children: [/*#__PURE__*/_jsxDEV(SenderAndTime, {\n              children: [/*#__PURE__*/_jsxDEV(Sender, {\n                children: message.sender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Time, {\n                children: new Date(message.time).toTimeString().split(' ')[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Content, {\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)]\n          }, message.time, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChatForm, {\n        onSubmit: handleSendMessage,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          onChange: event => {\n            setInput(event.target.value);\n          },\n          value: input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Leaderboards, {\n      children: leaderboard.map((item, index) => {\n        const winRate = item.win + item.lose === 0 ? 0 : (Math.round(item.win / (item.win + item.lose) * 100 * 100) / 100).toFixed(2);\n        return /*#__PURE__*/_jsxDEV(LeaderboardsItem, {\n          children: [/*#__PURE__*/_jsxDEV(ThemeProvider, {\n            theme: {\n              place: index + 1\n            },\n            children: /*#__PURE__*/_jsxDEV(Place, {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Info, {\n            children: [/*#__PURE__*/_jsxDEV(Name, {\n              children: item.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n              children: [/*#__PURE__*/_jsxDEV(Win, {\n                children: `Win: ${item.win}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(WinRate, {\n                children: `Win rate: ${winRate}%`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this)]\n        }, item.username, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GlobalChat, \"Q54aAxJoQBbvcqLhVM/bixzSU/U=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector, useAppDispatch];\n});\n\n_c = GlobalChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalChat\");","map":{"version":3,"sources":["E:/Freelancer/Github/caroPlay/client/src/pages/UserHomePage/components/GlobalChat/index.tsx"],"names":["React","useState","ThemeProvider","useAppDispatch","useAppSelector","Messages","ChatForm","ChatMessage","Container","Input","Header","HeaderChoice","SubmitButton","SenderAndTime","Sender","Time","Content","Leaderboards","LeaderboardsItem","Win","Place","Info","Name","Statistic","WinRate","GlobalChat","socket","messages","state","chat","me","auth","userInfo","username","input","setInput","display","setDisplay","leaderboard","leaderBoards","dispatch","handleSendMessage","event","preventDefault","emit","sender","content","isSelected","map","message","isMyMessage","Date","time","toTimeString","split","target","value","item","index","winRate","win","lose","Math","round","toFixed","place"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Socket } from 'socket.io-client';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { RootState } from '../../../../store';\r\nimport { addMessage } from '../../../../store/chat/slice';\r\nimport { useAppDispatch, useAppSelector } from '../../../../store/hook';\r\nimport {\r\n  Messages,\r\n  ChatForm,\r\n  ChatMessage,\r\n  Container,\r\n  Input,\r\n  Header,\r\n  HeaderChoice,\r\n  SubmitButton,\r\n  SenderAndTime,\r\n  Sender,\r\n  Time,\r\n  Content,\r\n  Leaderboards,\r\n  LeaderboardsItem,\r\n  Win,\r\n  Place,\r\n  Info,\r\n  Name,\r\n  Statistic,\r\n  WinRate,\r\n} from './elements';\r\n\r\ninterface PropTypes {\r\n  socket: Socket | undefined;\r\n}\r\n\r\nexport const GlobalChat = ({ socket }: PropTypes): JSX.Element => {\r\n  const messages = useAppSelector((state: RootState) => state.chat.messages);\r\n  const me = useAppSelector(\r\n    (state: RootState) => state.auth.userInfo?.username\r\n  );\r\n  const [input, setInput] = useState('');\r\n  const [display, setDisplay] = useState(true);\r\n  const leaderboard = useAppSelector((state: RootState) => state.leaderBoards);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleSendMessage = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    socket?.emit('global_chat', {\r\n      sender: me,\r\n      content: input,\r\n    });\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <ThemeProvider theme={{ isSelected: display }}>\r\n          <HeaderChoice\r\n            onClick={() => {\r\n              setDisplay(true);\r\n            }}\r\n          >\r\n            Chat\r\n          </HeaderChoice>\r\n        </ThemeProvider>\r\n        <ThemeProvider theme={{ isSelected: !display }}>\r\n          <HeaderChoice\r\n            onClick={() => {\r\n              setDisplay(false);\r\n            }}\r\n          >\r\n            Leaderboards\r\n          </HeaderChoice>\r\n        </ThemeProvider>\r\n      </Header>\r\n      {display ? (\r\n        <>\r\n          <Messages>\r\n            {messages.map((message) => (\r\n              <ThemeProvider theme={{ isMyMessage: me === message.sender }}>\r\n                <ChatMessage key={message.time}>\r\n                  <SenderAndTime>\r\n                    <Sender>{message.sender}</Sender>\r\n                    <Time>\r\n                      {new Date(message.time).toTimeString().split(' ')[0]}\r\n                    </Time>\r\n                  </SenderAndTime>\r\n                  <Content>{message.content}</Content>\r\n                </ChatMessage>\r\n              </ThemeProvider>\r\n            ))}\r\n          </Messages>\r\n          <ChatForm onSubmit={handleSendMessage}>\r\n            <Input\r\n              type=\"text\"\r\n              onChange={(event) => {\r\n                setInput(event.target.value);\r\n              }}\r\n              value={input}\r\n            />\r\n            <SubmitButton type=\"submit\">Send</SubmitButton>\r\n          </ChatForm>\r\n        </>\r\n      ) : (\r\n        <Leaderboards>\r\n          {leaderboard.map((item, index) => {\r\n            const winRate =\r\n              item.win + item.lose === 0\r\n                ? 0\r\n                : (\r\n                    Math.round(\r\n                      (item.win / (item.win + item.lose)) * 100 * 100\r\n                    ) / 100\r\n                  ).toFixed(2);\r\n            return (\r\n              <LeaderboardsItem key={item.username}>\r\n                <ThemeProvider theme={{ place: index + 1 }}>\r\n                  <Place>{index + 1}</Place>\r\n                </ThemeProvider>\r\n                <Info>\r\n                  <Name>{item.username}</Name>\r\n                  <Statistic>\r\n                    <Win>{`Win: ${item.win}`}</Win>\r\n                    <WinRate>{`Win rate: ${winRate}%`}</WinRate>\r\n                  </Statistic>\r\n                </Info>\r\n              </LeaderboardsItem>\r\n            );\r\n          })}\r\n        </Leaderboards>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}