{"ast":null,"code":"var _jsxFileName = \"E:\\\\Freelancer\\\\Github\\\\caroPlay\\\\client\\\\src\\\\pages\\\\UserHomePage\\\\components\\\\MainBoard\\\\board_component\\\\currentRoom\\\\playground\\\\square.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Square = styled.div`\n  border: 1px solid black;\n  width: 35px;\n  height: 35px;\n  padding: 1px 1px;\n  text-align: center;\n  font-weight: bold;\n  font-size: 30px;\n  background: ${props => {\n  if (props.theme.streak) return '#c96284';\n  if (props.theme.highLight) return '#be9bbc';\n}};\n  color: ${props => {\n  if (props.theme.main === 1) return 'blue';\n  if (props.theme.main === 0) return 'black';\n}};\n\n  :hover {\n    background: ${props => {\n  if (!props.theme.main) return '#ccd3da';\n}};\n    cursor: pointer;\n  }\n`;\n_c = Square;\nexport const GameSquare = ({\n  xIndex,\n  yIndex,\n  value,\n  handleMove,\n  isLastMove,\n  isStreak\n}) => {\n  _s();\n\n  const [isHighlight, setIsHighLight] = useState(false);\n  useEffect(() => {\n    if (isLastMove) {\n      // console.log(isHighlight);\n      setIsHighLight(true);\n      setTimeout(() => {\n        setIsHighLight(false);\n      }, 1000);\n    }\n  }, [value]); // const [isTicked, setIsTicked] = useState<boolean>(false);\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: {\n      main: value,\n      highLight: isHighlight,\n      streak: isStreak\n    },\n    children: /*#__PURE__*/_jsxDEV(Square, {\n      onClick: () => {\n        if (value) return;\n        handleMove(xIndex, yIndex);\n      },\n      children: value && (value === 1 ? 'X' : 'O')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GameSquare, \"UVgYvcrSEYTKnnqNIbVAUf1YL/s=\");\n\n_c2 = GameSquare;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"GameSquare\");","map":{"version":3,"sources":["E:/Freelancer/Github/caroPlay/client/src/pages/UserHomePage/components/MainBoard/board_component/currentRoom/playground/square.tsx"],"names":["React","useEffect","useState","styled","ThemeProvider","Square","div","props","theme","streak","highLight","main","GameSquare","xIndex","yIndex","value","handleMove","isLastMove","isStreak","isHighlight","setIsHighLight","setTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;;AAGA,MAAMC,MAAM,GAAGF,MAAM,CAACG,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAiBC,KAAD,IAAW;AACvB,MAAIA,KAAK,CAACC,KAAN,CAAYC,MAAhB,EAAwB,OAAO,SAAP;AACxB,MAAIF,KAAK,CAACC,KAAN,CAAYE,SAAhB,EAA2B,OAAO,SAAP;AAC5B,CAAC;AACJ,WAAYH,KAAD,IAAW;AAClB,MAAIA,KAAK,CAACC,KAAN,CAAYG,IAAZ,KAAqB,CAAzB,EAA4B,OAAO,MAAP;AAC5B,MAAIJ,KAAK,CAACC,KAAN,CAAYG,IAAZ,KAAqB,CAAzB,EAA4B,OAAO,OAAP;AAC7B,CAAC;AACJ;AACA;AACA,kBAAmBJ,KAAD,IAAW;AACvB,MAAI,CAACA,KAAK,CAACC,KAAN,CAAYG,IAAjB,EAAuB,OAAO,SAAP;AACxB,CAAC;AACN;AACA;AACA,CAvBA;KAAMN,M;AAkCN,OAAO,MAAMO,UAAU,GAAG,CAAC;AACzBC,EAAAA,MADyB;AAEzBC,EAAAA,MAFyB;AAGzBC,EAAAA,KAHyB;AAIzBC,EAAAA,UAJyB;AAKzBC,EAAAA,UALyB;AAMzBC,EAAAA;AANyB,CAAD,KAOT;AAAA;;AACf,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAU,KAAV,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,UAAJ,EAAgB;AACd;AACAG,MAAAA,cAAc,CAAC,IAAD,CAAd;AAEAC,MAAAA,UAAU,CAAC,MAAM;AACfD,QAAAA,cAAc,CAAC,KAAD,CAAd;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GATQ,EASN,CAACL,KAAD,CATM,CAAT,CAHe,CAaf;;AACA,sBACE,QAAC,aAAD;AACE,IAAA,KAAK,EAAE;AAAEJ,MAAAA,IAAI,EAAEI,KAAR;AAAeL,MAAAA,SAAS,EAAES,WAA1B;AAAuCV,MAAAA,MAAM,EAAES;AAA/C,KADT;AAAA,2BAGE,QAAC,MAAD;AACE,MAAA,OAAO,EAAE,MAAM;AACb,YAAIH,KAAJ,EAAW;AACXC,QAAAA,UAAU,CAACH,MAAD,EAASC,MAAT,CAAV;AACD,OAJH;AAAA,gBAMGC,KAAK,KAAKA,KAAK,KAAK,CAAV,GAAc,GAAd,GAAoB,GAAzB;AANR;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAnCM;;GAAMH,U;;MAAAA,U","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport { useAppDispatch } from '../../../../../../../store/hook';\r\n\r\nconst Square = styled.div`\r\n  border: 1px solid black;\r\n  width: 35px;\r\n  height: 35px;\r\n  padding: 1px 1px;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  font-size: 30px;\r\n  background: ${(props) => {\r\n    if (props.theme.streak) return '#c96284';\r\n    if (props.theme.highLight) return '#be9bbc';\r\n  }};\r\n  color: ${(props) => {\r\n    if (props.theme.main === 1) return 'blue';\r\n    if (props.theme.main === 0) return 'black';\r\n  }};\r\n\r\n  :hover {\r\n    background: ${(props) => {\r\n      if (!props.theme.main) return '#ccd3da';\r\n    }};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\ninterface PropTypes {\r\n  xIndex: number;\r\n  yIndex: number;\r\n  value: 1 | 2 | null;\r\n  handleMove: (xIndex: number, yIndex: number) => void;\r\n  isLastMove: boolean;\r\n  isStreak: boolean;\r\n}\r\n\r\nexport const GameSquare = ({\r\n  xIndex,\r\n  yIndex,\r\n  value,\r\n  handleMove,\r\n  isLastMove,\r\n  isStreak,\r\n}: PropTypes) => {\r\n  const [isHighlight, setIsHighLight] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (isLastMove) {\r\n      // console.log(isHighlight);\r\n      setIsHighLight(true);\r\n\r\n      setTimeout(() => {\r\n        setIsHighLight(false);\r\n      }, 1000);\r\n    }\r\n  }, [value]);\r\n  // const [isTicked, setIsTicked] = useState<boolean>(false);\r\n  return (\r\n    <ThemeProvider\r\n      theme={{ main: value, highLight: isHighlight, streak: isStreak }}\r\n    >\r\n      <Square\r\n        onClick={() => {\r\n          if (value) return;\r\n          handleMove(xIndex, yIndex);\r\n        }}\r\n      >\r\n        {value && (value === 1 ? 'X' : 'O')}\r\n      </Square>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}