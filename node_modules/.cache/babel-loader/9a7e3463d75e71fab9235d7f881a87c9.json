{"ast":null,"code":"var _jsxFileName = \"E:\\\\Freelancer\\\\Github\\\\caroPlay\\\\client\\\\src\\\\appRouter.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport NavBar from './containers/NavBar';\nimport NotFound from './pages/NotFound';\nimport { RootModal } from './containers/Modal';\nimport { Home } from './pages/Home/index';\nimport { useFetchInfo } from './hooks/useFetchInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppRouter = () => {\n  _s();\n\n  const {\n    isLoading,\n    errorCode\n  } = useFetchInfo();\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 25\n  }, this);\n\n  if (errorCode && errorCode !== 401) {\n    // console.log(errorCode);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Oops, server error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RootModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppRouter, \"ua4L8ho38PbjN/dIox2dReqBoyM=\", false, function () {\n  return [useFetchInfo];\n});\n\n_c = AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["E:/Freelancer/Github/caroPlay/client/src/appRouter.tsx"],"names":["React","BrowserRouter","Router","Route","Switch","Redirect","NavBar","NotFound","RootModal","Home","useFetchInfo","AppRouter","isLoading","errorCode"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,MAHF,EAIEC,QAJF,QAKO,kBALP;AAMA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,YAAT,QAA6B,sBAA7B;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA2BH,YAAY,EAA7C;AACA,MAAIE,SAAJ,EAAe,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACf,MAAIC,SAAS,IAAIA,SAAS,KAAK,GAA/B,EAAoC;AAClC;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAA,+BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAcE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA/BM;;GAAMF,S;UACsBD,Y;;;KADtBC,S","sourcesContent":["import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport NavBar from './containers/NavBar';\r\nimport UserPage from './pages/User';\r\nimport NotFound from './pages/NotFound';\r\nimport PrivateRoute from './helpers/PrivateRoute';\r\nimport { RootModal } from './containers/Modal';\r\nimport { Home } from './pages/Home/index';\r\nimport { useFetchInfo } from './hooks/useFetchInfo';\r\n\r\nexport const AppRouter = () => {\r\n  const { isLoading, errorCode } = useFetchInfo();\r\n  if (isLoading) return <div>Loading</div>;\r\n  if (errorCode && errorCode !== 401) {\r\n    // console.log(errorCode);\r\n    return <div>Oops, server error</div>;\r\n  }\r\n  return (\r\n    <Router>\r\n      <NavBar />\r\n      <RootModal />\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <Redirect to=\"/\" />\r\n        </Route>\r\n        {/* <PrivateRoute\r\n              path=\"/me\"\r\n              conditionalFn={() => !!isAuth}\r\n              redirectPath=\"/login\"\r\n            >\r\n              <UserPage />\r\n            </PrivateRoute> */}\r\n        <Route path=\"*\">\r\n          <NotFound />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}