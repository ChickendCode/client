{"ast":null,"code":"var _jsxFileName = \"E:\\\\Freelancer\\\\Github\\\\caroPlay\\\\client\\\\src\\\\pages\\\\UserHomePage\\\\components\\\\MainBoard\\\\board_component\\\\currentRoom\\\\infoPanel\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { useAppDispatch, useAppSelector } from '../../../../../../../store/hook';\nimport { setTimerAfterTick } from '../../../../../../../store/timer/slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\n_c = Container;\nconst RoomName = styled.div`\n  text-align: center;\n  font-size: 30px;\n  font-weight: bold;\n  height: fit-content;\n  margin-bottom: 30px;\n`;\n_c2 = RoomName;\nconst RoomOwner = styled.div`\n  text-align: center;\n  font-size: 25px;\n  height: fit-content;\n  margin-bottom: 20px;\n`;\nconst PlayerList = styled.div`\n  height: fit-content;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n_c3 = PlayerList;\nconst RoomPlayer = styled.div`\n  height: fit-content;\n  /* padding: 5px 5px; */\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 15px;\n  /* border: 1px solid salmon; */\n  color: ${props => props.theme.nextTurn && 'red'};\n`;\n_c4 = RoomPlayer;\nconst JoinButton = styled.button`\n  padding: 5px 15px;\n  background: #e9e8eb;\n  height: fit-content;\n  width: fit-content;\n  cursor: pointer;\n  /* margin-left: 30px; */\n\n  :hover {\n    background: #c0a9be;\n  }\n`;\n_c5 = JoinButton;\nconst PlayerRow = styled.div`\n  padding: 0px 20px;\n  display: flex;\n  justify-content: space-between;\n  height: fit-content;\n  width: fit-content;\n  /* border: 1px solid blue; */\n`;\n_c6 = PlayerRow;\nconst PlayerLabel = styled.span`\n  font-size: 20px;\n  height: fit-content;\n  width: fit-content;\n  margin-right: 50px;\n`;\n_c7 = PlayerLabel;\nconst PlayerName = styled.div`\n  font-size: 20px;\n  height: fit-content;\n  width: fit-content;\n  /* margin-left: 60px; */\n`;\n_c8 = PlayerName;\nconst PlayerReadyState = styled.div`\n  font-size: 20px;\n  height: fit-content;\n  width: fit-content;\n  margin-right: 30px;\n`;\n_c9 = PlayerReadyState;\nconst PlayerTurnTimer = styled.div`\n  font-size: 25px;\n  height: fit-content;\n  width: fit-content;\n  margin-right: 30px;\n`;\n_c10 = PlayerTurnTimer;\nconst MatchResult = styled.div`\n  font-size: 25px;\n  height: fit-content;\n  width: fit-content;\n  color: red;\n  text-align: center;\n`;\n_c11 = MatchResult;\nconst Reason = styled.div`\n  font-size: 25px;\n  height: fit-content;\n  width: fit-content;\n  color: red;\n  text-align: center;\n`;\n_c12 = Reason;\nconst RoomViewerList = styled.div`\n  height: fit-content;\n  margin-bottom: 30px;\n`;\n_c13 = RoomViewerList;\nconst RoomViewerRow = styled.div`\n  text-align: center;\n  font-size: 25px;\n  height: fit-content;\n`;\n_c14 = RoomViewerRow;\nconst ReadyButton = styled.button`\n  padding: 5px 10px;\n  background: #e9e8eb;\n  height: fit-content;\n  width: fit-content;\n  cursor: pointer;\n  margin-bottom: 50px;\n\n  :hover {\n    background: #6da0af;\n  }\n`;\n_c15 = ReadyButton;\nconst LeaveButton = styled.button`\n  padding: 5px 10px;\n  background: #e9e8eb;\n  height: fit-content;\n  width: fit-content;\n  cursor: pointer;\n  margin-bottom: 50px;\n\n  :hover {\n    background: #6da0af;\n  }\n`;\n_c16 = LeaveButton;\nconst BeViewerButton = styled.button`\n  padding: 5px 10px;\n  background: #e9e8eb;\n  height: fit-content;\n  width: fit-content;\n  cursor: pointer;\n  margin-bottom: 50px;\n\n  :hover {\n    background: #6da0af;\n  }\n`;\n_c17 = BeViewerButton;\nexport const RoomInfoPanel = ({\n  currentRoom,\n  socket\n}) => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const {\n    matchMove: matchMoveTimer\n  } = useAppSelector(state => state.timer);\n  const currentMatch = useAppSelector(state => state.game.currentMatch);\n  const {\n    me\n  } = currentRoom;\n\n  const handleRequestToBePlayer = pos => {\n    socket === null || socket === void 0 ? void 0 : socket.emit('request_to_be_player', pos, success => {// console.log(success);\n    });\n  };\n\n  const handleRequestToBeViewer = () => {\n    socket === null || socket === void 0 ? void 0 : socket.emit('request_to_be_viewer', success => {// console.log(success);\n    });\n  };\n\n  const handleChangeReadyStatus = () => {\n    socket === null || socket === void 0 ? void 0 : socket.emit('ready_status_change', success => {// console.log(success);\n    });\n  };\n\n  const handleLeave = () => {\n    socket === null || socket === void 0 ? void 0 : socket.emit('leave_room', success => {\n      if (!success) return false;\n    });\n  };\n\n  const playerList = Array(2).fill(null).map((val, index) => {\n    const existPlayer = currentRoom.room.player.find(player => player.pos === index + 1);\n    const key = `player${index}`; // const isInMatch = !!currentMatch\n\n    const isNextTurn = currentMatch && !!(currentMatch.nextTurn === index + 1 && matchMoveTimer.isActive);\n    return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: {\n        nextTurn: isNextTurn\n      },\n      children: /*#__PURE__*/_jsxDEV(RoomPlayer, {\n        children: [/*#__PURE__*/_jsxDEV(PlayerRow, {\n          children: [/*#__PURE__*/_jsxDEV(PlayerLabel, {\n            children: [\"Player\", ` ${index + 1}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), existPlayer ? /*#__PURE__*/_jsxDEV(PlayerName, {\n            children: existPlayer.name === me.name ? 'Me' : existPlayer.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(JoinButton, {\n            onClick: () => handleRequestToBePlayer(index + 1),\n            children: \"Be a player\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), currentMatch ? isNextTurn ? /*#__PURE__*/_jsxDEV(PlayerTurnTimer, {\n          children: [matchMoveTimer.remain, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 17\n        }, this) : null : /*#__PURE__*/_jsxDEV(PlayerReadyState, {\n          children: existPlayer && (existPlayer.isReady ? 'Ready' : 'Not ready')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this);\n  });\n  const viewerList = currentRoom.room.viewer.map(viewer => /*#__PURE__*/_jsxDEV(RoomViewerRow, {\n    children: viewer.name === me.name ? 'Me' : viewer.name\n  }, viewer.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this));\n  useEffect(() => {\n    let matchMoveInterval;\n\n    if (matchMoveTimer.isActive) {\n      matchMoveInterval = setInterval(() => {\n        dispatch(setTimerAfterTick('matchMove'));\n      }, 1000);\n    }\n\n    return () => {\n      if (matchMoveInterval) {\n        clearInterval(matchMoveInterval);\n      }\n    };\n  }, [matchMoveTimer.isActive]);\n  let winner;\n\n  if (currentMatch && currentMatch.result) {\n    var _currentRoom$room$pla;\n\n    winner = (_currentRoom$room$pla = currentRoom.room.player.find(player => {\n      var _currentMatch$result;\n\n      return player.pos === ((_currentMatch$result = currentMatch.result) === null || _currentMatch$result === void 0 ? void 0 : _currentMatch$result.winner);\n    })) === null || _currentRoom$room$pla === void 0 ? void 0 : _currentRoom$room$pla.name;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(RoomName, {\n      children: `Room: ${currentRoom.room.name}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlayerList, {\n      children: playerList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), currentMatch && currentMatch.result && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MatchResult, {\n        children: winner === me.name ? 'You win' : `Player ${winner} win`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this), currentMatch.result.reason && /*#__PURE__*/_jsxDEV(Reason, {\n        children: currentMatch.result.reason\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), !currentMatch && 'pos' in me ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ReadyButton, {\n        type: \"button\",\n        onClick: () => {\n          handleChangeReadyStatus();\n        },\n        children: me.isReady ? 'Not ready' : 'Ready'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this), !me.isReady && /*#__PURE__*/_jsxDEV(BeViewerButton, {\n        onClick: () => {\n          handleRequestToBeViewer();\n        },\n        children: \"Be a viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(LeaveButton, {\n      onClick: () => {\n        handleLeave();\n      },\n      children: \"Leave\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RoomViewerList, {\n      children: viewerList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RoomInfoPanel, \"wX1ALtSQPiPYXpUL/yZWKue6FCU=\", false, function () {\n  return [useAppDispatch, useAppSelector, useAppSelector];\n});\n\n_c18 = RoomInfoPanel;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"RoomName\");\n$RefreshReg$(_c3, \"PlayerList\");\n$RefreshReg$(_c4, \"RoomPlayer\");\n$RefreshReg$(_c5, \"JoinButton\");\n$RefreshReg$(_c6, \"PlayerRow\");\n$RefreshReg$(_c7, \"PlayerLabel\");\n$RefreshReg$(_c8, \"PlayerName\");\n$RefreshReg$(_c9, \"PlayerReadyState\");\n$RefreshReg$(_c10, \"PlayerTurnTimer\");\n$RefreshReg$(_c11, \"MatchResult\");\n$RefreshReg$(_c12, \"Reason\");\n$RefreshReg$(_c13, \"RoomViewerList\");\n$RefreshReg$(_c14, \"RoomViewerRow\");\n$RefreshReg$(_c15, \"ReadyButton\");\n$RefreshReg$(_c16, \"LeaveButton\");\n$RefreshReg$(_c17, \"BeViewerButton\");\n$RefreshReg$(_c18, \"RoomInfoPanel\");","map":{"version":3,"sources":["E:/Freelancer/Github/caroPlay/client/src/pages/UserHomePage/components/MainBoard/board_component/currentRoom/infoPanel/index.tsx"],"names":["React","useEffect","styled","ThemeProvider","useAppDispatch","useAppSelector","setTimerAfterTick","Container","div","RoomName","RoomOwner","PlayerList","RoomPlayer","props","theme","nextTurn","JoinButton","button","PlayerRow","PlayerLabel","span","PlayerName","PlayerReadyState","PlayerTurnTimer","MatchResult","Reason","RoomViewerList","RoomViewerRow","ReadyButton","LeaveButton","BeViewerButton","RoomInfoPanel","currentRoom","socket","dispatch","matchMove","matchMoveTimer","state","timer","currentMatch","game","me","handleRequestToBePlayer","pos","emit","success","handleRequestToBeViewer","handleChangeReadyStatus","handleLeave","playerList","Array","fill","map","val","index","existPlayer","room","player","find","key","isNextTurn","isActive","name","remain","isReady","viewerList","viewer","matchMoveInterval","setInterval","clearInterval","winner","result","reason"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Socket } from 'socket.io-client';\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport { RootState } from '../../../../../../../store';\r\nimport { ICurrentRoom } from '../../../../../../../store/game/slice';\r\nimport {\r\n  useAppDispatch,\r\n  useAppSelector,\r\n} from '../../../../../../../store/hook';\r\nimport {\r\n  setActiveTimer,\r\n  setTimerAfterTick,\r\n} from '../../../../../../../store/timer/slice';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst RoomName = styled.div`\r\n  text-align: center;\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  height: fit-content;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst RoomOwner = styled.div`\r\n  text-align: center;\r\n  font-size: 25px;\r\n  height: fit-content;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst PlayerList = styled.div`\r\n  height: fit-content;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst RoomPlayer = styled.div`\r\n  height: fit-content;\r\n  /* padding: 5px 5px; */\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 15px;\r\n  /* border: 1px solid salmon; */\r\n  color: ${(props) => props.theme.nextTurn && 'red'};\r\n`;\r\n\r\nconst JoinButton = styled.button`\r\n  padding: 5px 15px;\r\n  background: #e9e8eb;\r\n  height: fit-content;\r\n  width: fit-content;\r\n  cursor: pointer;\r\n  /* margin-left: 30px; */\r\n\r\n  :hover {\r\n    background: #c0a9be;\r\n  }\r\n`;\r\n\r\nconst PlayerRow = styled.div`\r\n  padding: 0px 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: fit-content;\r\n  width: fit-content;\r\n  /* border: 1px solid blue; */\r\n`;\r\n\r\nconst PlayerLabel = styled.span`\r\n  font-size: 20px;\r\n  height: fit-content;\r\n  width: fit-content;\r\n  margin-right: 50px;\r\n`;\r\n\r\nconst PlayerName = styled.div`\r\n  font-size: 20px;\r\n  height: fit-content;\r\n  width: fit-content;\r\n  /* margin-left: 60px; */\r\n`;\r\n\r\nconst PlayerReadyState = styled.div`\r\n  font-size: 20px;\r\n  height: fit-content;\r\n  width: fit-content;\r\n  margin-right: 30px;\r\n`;\r\n\r\nconst PlayerTurnTimer = styled.div`\r\n  font-size: 25px;\r\n  height: fit-content;\r\n  width: fit-content;\r\n  margin-right: 30px;\r\n`;\r\n\r\nconst MatchResult = styled.div`\r\n  font-size: 25px;\r\n  height: fit-content;\r\n  width: fit-content;\r\n  color: red;\r\n  text-align: center;\r\n`;\r\n\r\nconst Reason = styled.div`\r\n  font-size: 25px;\r\n  height: fit-content;\r\n  width: fit-content;\r\n  color: red;\r\n  text-align: center;\r\n`;\r\n\r\nconst RoomViewerList = styled.div`\r\n  height: fit-content;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst RoomViewerRow = styled.div`\r\n  text-align: center;\r\n  font-size: 25px;\r\n  height: fit-content;\r\n`;\r\n\r\nconst ReadyButton = styled.button`\r\n  padding: 5px 10px;\r\n  background: #e9e8eb;\r\n  height: fit-content;\r\n  width: fit-content;\r\n  cursor: pointer;\r\n  margin-bottom: 50px;\r\n\r\n  :hover {\r\n    background: #6da0af;\r\n  }\r\n`;\r\n\r\nconst LeaveButton = styled.button`\r\n  padding: 5px 10px;\r\n  background: #e9e8eb;\r\n  height: fit-content;\r\n  width: fit-content;\r\n  cursor: pointer;\r\n  margin-bottom: 50px;\r\n\r\n  :hover {\r\n    background: #6da0af;\r\n  }\r\n`;\r\n\r\nconst BeViewerButton = styled.button`\r\n  padding: 5px 10px;\r\n  background: #e9e8eb;\r\n  height: fit-content;\r\n  width: fit-content;\r\n  cursor: pointer;\r\n  margin-bottom: 50px;\r\n\r\n  :hover {\r\n    background: #6da0af;\r\n  }\r\n`;\r\n\r\ninterface PropTypes {\r\n  currentRoom: ICurrentRoom;\r\n  socket?: Socket;\r\n}\r\n\r\nexport const RoomInfoPanel = ({ currentRoom, socket }: PropTypes) => {\r\n  const dispatch = useAppDispatch();\r\n  const { matchMove: matchMoveTimer } = useAppSelector(\r\n    (state: RootState) => state.timer\r\n  );\r\n  const currentMatch = useAppSelector(\r\n    (state: RootState) => state.game.currentMatch\r\n  );\r\n  const { me } = currentRoom;\r\n\r\n  const handleRequestToBePlayer = (pos: number) => {\r\n    socket?.emit('request_to_be_player', pos, (success: boolean) => {\r\n      // console.log(success);\r\n    });\r\n  };\r\n\r\n  const handleRequestToBeViewer = () => {\r\n    socket?.emit('request_to_be_viewer', (success: boolean) => {\r\n      // console.log(success);\r\n    });\r\n  };\r\n\r\n  const handleChangeReadyStatus = () => {\r\n    socket?.emit('ready_status_change', (success: boolean) => {\r\n      // console.log(success);\r\n    });\r\n  };\r\n\r\n  const handleLeave = () => {\r\n    socket?.emit('leave_room', (success: boolean) => {\r\n      if (!success) return false;\r\n    });\r\n  };\r\n\r\n  const playerList = Array(2)\r\n    .fill(null)\r\n    .map((val, index) => {\r\n      const existPlayer = currentRoom.room.player.find(\r\n        (player) => player.pos === index + 1\r\n      );\r\n      const key = `player${index}`;\r\n      // const isInMatch = !!currentMatch\r\n      const isNextTurn =\r\n        currentMatch &&\r\n        !!(currentMatch.nextTurn === index + 1 && matchMoveTimer.isActive);\r\n      return (\r\n        <ThemeProvider theme={{ nextTurn: isNextTurn }} key={key}>\r\n          <RoomPlayer>\r\n            <PlayerRow>\r\n              <PlayerLabel>\r\n                Player\r\n                {` ${index + 1}`}\r\n              </PlayerLabel>\r\n              {existPlayer ? (\r\n                <PlayerName>\r\n                  {existPlayer.name === me.name ? 'Me' : existPlayer.name}\r\n                </PlayerName>\r\n              ) : (\r\n                <JoinButton onClick={() => handleRequestToBePlayer(index + 1)}>\r\n                  Be a player\r\n                </JoinButton>\r\n              )}\r\n            </PlayerRow>\r\n            {currentMatch ? (\r\n              isNextTurn ? (\r\n                <PlayerTurnTimer>{matchMoveTimer.remain} </PlayerTurnTimer>\r\n              ) : null\r\n            ) : (\r\n              <PlayerReadyState>\r\n                {existPlayer && (existPlayer.isReady ? 'Ready' : 'Not ready')}\r\n              </PlayerReadyState>\r\n            )}\r\n          </RoomPlayer>\r\n        </ThemeProvider>\r\n      );\r\n    });\r\n\r\n  const viewerList = currentRoom.room.viewer.map((viewer) => (\r\n    <RoomViewerRow key={viewer.name}>\r\n      {viewer.name === me.name ? 'Me' : viewer.name}\r\n    </RoomViewerRow>\r\n  ));\r\n\r\n  useEffect(() => {\r\n    let matchMoveInterval: any;\r\n    if (matchMoveTimer.isActive) {\r\n      matchMoveInterval = setInterval(() => {\r\n        dispatch(setTimerAfterTick('matchMove'));\r\n      }, 1000);\r\n    }\r\n    return () => {\r\n      if (matchMoveInterval) {\r\n        clearInterval(matchMoveInterval);\r\n      }\r\n    };\r\n  }, [matchMoveTimer.isActive]);\r\n\r\n  let winner;\r\n  if (currentMatch && currentMatch.result) {\r\n    winner = currentRoom.room.player.find(\r\n      (player) => player.pos === currentMatch.result?.winner\r\n    )?.name;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <RoomName>{`Room: ${currentRoom.room.name}`}</RoomName>\r\n      <PlayerList>{playerList}</PlayerList>\r\n      {currentMatch && currentMatch.result && (\r\n        <>\r\n          <MatchResult>\r\n            {winner === me.name ? 'You win' : `Player ${winner} win`}\r\n          </MatchResult>\r\n          {currentMatch.result.reason && (\r\n            <Reason>{currentMatch.result.reason}</Reason>\r\n          )}\r\n        </>\r\n      )}\r\n      {!currentMatch && 'pos' in me ? (\r\n        <>\r\n          <ReadyButton\r\n            type=\"button\"\r\n            onClick={() => {\r\n              handleChangeReadyStatus();\r\n            }}\r\n          >\r\n            {me.isReady ? 'Not ready' : 'Ready'}\r\n          </ReadyButton>\r\n          {!me.isReady && (\r\n            <BeViewerButton\r\n              onClick={() => {\r\n                handleRequestToBeViewer();\r\n              }}\r\n            >\r\n              Be a viewer\r\n            </BeViewerButton>\r\n          )}\r\n        </>\r\n      ) : null}\r\n      <LeaveButton\r\n        onClick={() => {\r\n          handleLeave();\r\n        }}\r\n      >\r\n        Leave\r\n      </LeaveButton>\r\n      <RoomViewerList>{viewerList}</RoomViewerList>\r\n    </Container>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}