{"ast":null,"code":"var _jsxFileName = \"E:\\\\Freelancer\\\\Github\\\\caroPlay\\\\client\\\\src\\\\containers\\\\Modal\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useAppDispatch, useAppSelector } from '../../store/hook';\nimport { hide } from '../../store/Modal/slice';\nimport { Overlay, Modal, ModalHeader, CloseButton, None } from './ModalElements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const RootModal = () => {\n  _s();\n\n  const modalRoot = document.getElementById('modal-root');\n  const {\n    isShown,\n    component\n  } = useAppSelector(state => state.modal);\n  const dispatch = useAppDispatch();\n  return !isShown ? /*#__PURE__*/_jsxDEV(None, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Overlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: /*#__PURE__*/_jsxDEV(CloseButton, {\n          onClick: () => {\n            dispatch(hide());\n          },\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), component]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true), modalRoot);\n};\n\n_s(RootModal, \"nlaw4DVj4rikEyfiAE28cZE1lmo=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\n\n_c = RootModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"RootModal\");","map":{"version":3,"sources":["E:/Freelancer/Github/caroPlay/client/src/containers/Modal/index.tsx"],"names":["React","ReactDOM","useAppDispatch","useAppSelector","hide","Overlay","Modal","ModalHeader","CloseButton","None","RootModal","modalRoot","document","getElementById","isShown","component","state","modal","dispatch","createPortal"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,kBAA/C;AACA,SAASC,IAAT,QAAwC,yBAAxC;AACA,SACEC,OADF,EAEEC,KAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,IALF,QAMO,iBANP;;;AAQA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC7B,QAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAlB;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAyBZ,cAAc,CAC1Ca,KAAD,IAAsBA,KAAK,CAACC,KADe,CAA7C;AAIA,QAAMC,QAAQ,GAAGhB,cAAc,EAA/B;AAEA,SAAO,CAACY,OAAD,gBACL,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,UADK,gBAGLb,QAAQ,CAACkB,YAAT,eACE;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAA,8BACE,QAAC,WAAD;AAAA,+BACE,QAAC,WAAD;AACE,UAAA,OAAO,EAAE,MAAM;AACbD,YAAAA,QAAQ,CAACd,IAAI,EAAL,CAAR;AACD,WAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAUGW,SAVH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF,EAgBEJ,SAhBF,CAHF;AAsBD,CA9BM;;GAAMD,S;UAEoBP,c,EAIdD,c;;;KANNQ,S","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { RootState } from '../../store';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hook';\r\nimport { hide, showWithComponent } from '../../store/Modal/slice';\r\nimport {\r\n  Overlay,\r\n  Modal,\r\n  ModalHeader,\r\n  CloseButton,\r\n  None,\r\n} from './ModalElements';\r\n\r\nexport const RootModal = () => {\r\n  const modalRoot = document.getElementById('modal-root') as HTMLElement;\r\n  const { isShown, component } = useAppSelector(\r\n    (state: RootState) => state.modal\r\n  );\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  return !isShown ? (\r\n    <None />\r\n  ) : (\r\n    ReactDOM.createPortal(\r\n      <>\r\n        <Overlay />\r\n        <Modal>\r\n          <ModalHeader>\r\n            <CloseButton\r\n              onClick={() => {\r\n                dispatch(hide());\r\n              }}\r\n            >\r\n              X\r\n            </CloseButton>\r\n          </ModalHeader>\r\n          {component}\r\n        </Modal>\r\n      </>,\r\n      modalRoot\r\n    )\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}