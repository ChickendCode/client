{"ast":null,"code":"var _jsxFileName = \"E:\\\\Freelancer\\\\Github\\\\caroPlay\\\\client\\\\src\\\\pages\\\\UserHomePage\\\\components\\\\MainBoard\\\\board_component\\\\createRoom\\\\createRoom.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { socketHelper } from '../../../../../../helpers/socketHelper';\nimport { setCurrentRoom } from '../../../../../../store/game/slice';\nimport { useAppDispatch, useAppSelector } from '../../../../../../store/hook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  padding: 10px 10px;\n  width: 40%;\n  height: fit-content;\n  /* border: 1px solid red; */\n`;\n_c = Container;\nconst CreateRoomForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  border: 1px solid black;\n`;\n_c2 = CreateRoomForm;\nconst FormTitle = styled.div`\n  text-align: center;\n  font-size: 30px;\n  font-weight: bold;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n_c3 = FormTitle;\nconst FormInputLine = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 15px;\n`;\n_c4 = FormInputLine;\nconst InputLabel = styled.label`\n  text-align: center;\n  padding: 0px 15px;\n  width: fit-content;\n`;\n_c5 = InputLabel;\nconst InputField = styled.input`\n  height: 100%;\n  width: 150px;\n  padding: 2px 3px;\n  margin-right: 15px;\n`;\n_c6 = InputField;\nconst SubmitButton = styled.button`\n  height: fit-content;\n  width: fit-content;\n  padding: 5px 5px;\n  margin-bottom: 20px;\n`;\n_c7 = SubmitButton;\nconst ErrorState = styled.div`\n  text-align: center;\n  font-size: 20px;\n  color: red;\n  margin-bottom: 20px;\n`;\n_c8 = ErrorState;\nexport const CreateRoom = ({\n  socket\n}) => {\n  _s();\n\n  const me = useAppSelector(state => state.auth.userInfo);\n  const dispatch = useAppDispatch();\n  const roomNameRef = useRef(null);\n  const roomPasswordRef = useRef(null);\n  const [error, setError] = useState();\n  let isMounted = false;\n  useEffect(() => {\n    isMounted = true;\n    return () => {\n      isMounted = false;\n    };\n  });\n\n  const handleCreateRoom = event => {\n    var _roomNameRef$current, _roomPasswordRef$curr;\n\n    event.preventDefault();\n    const roomName = (_roomNameRef$current = roomNameRef.current) === null || _roomNameRef$current === void 0 ? void 0 : _roomNameRef$current.value;\n    const roomPassword = (_roomPasswordRef$curr = roomPasswordRef.current) === null || _roomPasswordRef$curr === void 0 ? void 0 : _roomPasswordRef$curr.value;\n    if (!roomName) setError('Enter room name first');else {\n      socket === null || socket === void 0 ? void 0 : socket.emit('create_room', {\n        roomName,\n        roomPassword\n      }, result => {\n        if (!isMounted) return;\n        if (result.errorMessage) return setError(result.errorMessage);\n\n        if (result.data) {\n          const myRole = socketHelper.getMyRole(me, result.data);\n          if (!myRole) return;\n          dispatch(setCurrentRoom({\n            room: result.data,\n            me: myRole\n          }));\n        }\n      });\n    }\n    setTimeout(() => {\n      if (isMounted) setError(undefined);\n    }, 3000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(CreateRoomForm, {\n      onSubmit: handleCreateRoom,\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Create new room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInputLine, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"room_name\",\n          children: \"Room name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          type: \"text\",\n          ref: roomNameRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInputLine, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"room_name\",\n          children: \"Room password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          type: \"password\",\n          ref: roomPasswordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(ErrorState, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateRoom, \"iCxF/NwsuPFW4Er/MhrtpOhrhSk=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\n\n_c9 = CreateRoom;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"CreateRoomForm\");\n$RefreshReg$(_c3, \"FormTitle\");\n$RefreshReg$(_c4, \"FormInputLine\");\n$RefreshReg$(_c5, \"InputLabel\");\n$RefreshReg$(_c6, \"InputField\");\n$RefreshReg$(_c7, \"SubmitButton\");\n$RefreshReg$(_c8, \"ErrorState\");\n$RefreshReg$(_c9, \"CreateRoom\");","map":{"version":3,"sources":["E:/Freelancer/Github/caroPlay/client/src/pages/UserHomePage/components/MainBoard/board_component/createRoom/createRoom.tsx"],"names":["React","useEffect","useRef","useState","styled","socketHelper","setCurrentRoom","useAppDispatch","useAppSelector","Container","div","CreateRoomForm","form","FormTitle","FormInputLine","InputLabel","label","InputField","input","SubmitButton","button","ErrorState","CreateRoom","socket","me","state","auth","userInfo","dispatch","roomNameRef","roomPasswordRef","error","setError","isMounted","handleCreateRoom","event","preventDefault","roomName","current","value","roomPassword","emit","result","errorMessage","data","myRole","getMyRole","room","setTimeout","undefined"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Socket } from 'socket.io-client';\r\n\r\nimport styled from 'styled-components';\r\nimport { socketHelper } from '../../../../../../helpers/socketHelper';\r\nimport { RootState } from '../../../../../../store';\r\nimport { setCurrentRoom } from '../../../../../../store/game/slice';\r\nimport { useAppDispatch, useAppSelector } from '../../../../../../store/hook';\r\nimport { Player, Room } from '../../interface/room.interface';\r\n\r\nconst Container = styled.div`\r\n  padding: 10px 10px;\r\n  width: 40%;\r\n  height: fit-content;\r\n  /* border: 1px solid red; */\r\n`;\r\n\r\nconst CreateRoomForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border: 1px solid black;\r\n`;\r\n\r\nconst FormTitle = styled.div`\r\n  text-align: center;\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst FormInputLine = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst InputLabel = styled.label`\r\n  text-align: center;\r\n  padding: 0px 15px;\r\n  width: fit-content;\r\n`;\r\n\r\nconst InputField = styled.input`\r\n  height: 100%;\r\n  width: 150px;\r\n  padding: 2px 3px;\r\n  margin-right: 15px;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  height: fit-content;\r\n  width: fit-content;\r\n  padding: 5px 5px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst ErrorState = styled.div`\r\n  text-align: center;\r\n  font-size: 20px;\r\n  color: red;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\ninterface PropTypes {\r\n  socket?: Socket;\r\n  // changeToRoom:\r\n}\r\n\r\ntype CreateRoomResult =\r\n  | {\r\n      data: undefined;\r\n      errorMessage: string;\r\n    }\r\n  | { errorMessage: undefined; data: Room };\r\n\r\nexport const CreateRoom = ({ socket }: PropTypes) => {\r\n  const me = useAppSelector((state: RootState) => state.auth.userInfo);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const roomNameRef = useRef<HTMLInputElement>(null);\r\n  const roomPasswordRef = useRef<HTMLInputElement>(null);\r\n  const [error, setError] = useState<string | undefined>();\r\n  let isMounted = false;\r\n\r\n  useEffect(() => {\r\n    isMounted = true;\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  });\r\n\r\n  const handleCreateRoom = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const roomName = roomNameRef.current?.value;\r\n    const roomPassword = roomPasswordRef.current?.value;\r\n    if (!roomName) setError('Enter room name first');\r\n    else {\r\n      socket?.emit(\r\n        'create_room',\r\n        { roomName, roomPassword },\r\n        (result: CreateRoomResult) => {\r\n          if (!isMounted) return;\r\n          if (result.errorMessage) return setError(result.errorMessage);\r\n          if (result.data) {\r\n            const myRole = socketHelper.getMyRole(me, result.data);\r\n            if (!myRole) return;\r\n            dispatch(setCurrentRoom({ room: result.data, me: myRole }));\r\n          }\r\n        }\r\n      );\r\n    }\r\n    setTimeout(() => {\r\n      if (isMounted) setError(undefined);\r\n    }, 3000);\r\n  };\r\n  return (\r\n    <Container>\r\n      <CreateRoomForm onSubmit={handleCreateRoom}>\r\n        <FormTitle>Create new room</FormTitle>\r\n        <FormInputLine>\r\n          <InputLabel htmlFor=\"room_name\">Room name:</InputLabel>\r\n          <InputField type=\"text\" ref={roomNameRef} />\r\n        </FormInputLine>\r\n        <FormInputLine>\r\n          <InputLabel htmlFor=\"room_name\">Room password:</InputLabel>\r\n          <InputField type=\"password\" ref={roomPasswordRef} />\r\n        </FormInputLine>\r\n        <SubmitButton>Create</SubmitButton>\r\n        {error && <ErrorState>{error}</ErrorState>}\r\n      </CreateRoomForm>\r\n    </Container>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}