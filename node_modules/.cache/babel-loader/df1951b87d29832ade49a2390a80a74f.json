{"ast":null,"code":"var _jsxFileName = \"E:\\\\Freelancer\\\\Github\\\\caroPlay\\\\client\\\\src\\\\containers\\\\NavBar\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Nav, NavbarContainer, NavLogo, UserSection, UserAvatar, UserInfo, UserInfoLink, UserInfoContainer, NavMenu, NavMenuItem, NavMenuLink, UserAccount, Dropdown } from './NavBarElement';\nimport avatar from '../../assets/profile.jpg';\nimport dropdown from '../../assets/dropdown.png';\nimport { useAppDispatch, useAppSelector } from '../../store/hook';\nimport { httpAdapter } from '../../adapter/http-request';\nimport { clearUser } from '../../store/auth/slice';\nimport { showWithComponent } from '../../store/Modal/slice';\nimport { ErrorModal } from '../../components/ErrorModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NavBar = () => {\n  _s();\n\n  const {\n    isAuth,\n    userInfo\n  } = useAppSelector(state => state.auth);\n  const dispatch = useAppDispatch();\n\n  const handleLogout = async () => {\n    const {\n      data,\n      error\n    } = await httpAdapter.logout();\n\n    if (error) {\n      dispatch(showWithComponent( /*#__PURE__*/_jsxDEV(ErrorModal, {\n        errorMessage: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 34\n      }, this)));\n    }\n\n    if (data) {\n      if (data.success) dispatch(clearUser());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Nav, {\n    children: /*#__PURE__*/_jsxDEV(NavbarContainer, {\n      children: [/*#__PURE__*/_jsxDEV(NavLogo, {\n        to: \"/\",\n        children: \"WeGomoku\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), isAuth && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(NavMenu, {\n          children: [/*#__PURE__*/_jsxDEV(NavMenuItem, {\n            children: /*#__PURE__*/_jsxDEV(NavMenuLink, {\n              to: \"/\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(NavMenuItem, {\n            children: /*#__PURE__*/_jsxDEV(NavMenuLink, {\n              to: \"/tournament\",\n              children: \"Tournament\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(NavMenuItem, {\n            children: /*#__PURE__*/_jsxDEV(NavMenuLink, {\n              to: \"/about\",\n              children: \"About\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(UserSection, {\n          children: [/*#__PURE__*/_jsxDEV(UserInfoLink, {\n            to: \"/me\",\n            children: /*#__PURE__*/_jsxDEV(UserInfoContainer, {\n              children: [/*#__PURE__*/_jsxDEV(UserAvatar, {\n                src: avatar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(UserInfo, {\n                children: userInfo === null || userInfo === void 0 ? void 0 : userInfo.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(UserAccount, {\n            children: /*#__PURE__*/_jsxDEV(Dropdown, {\n              src: dropdown,\n              onClick: handleLogout\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NavBar, \"eym/vVoBHm8MlUfpSF18CzdKEt4=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["E:/Freelancer/Github/caroPlay/client/src/containers/NavBar/index.tsx"],"names":["React","Nav","NavbarContainer","NavLogo","UserSection","UserAvatar","UserInfo","UserInfoLink","UserInfoContainer","NavMenu","NavMenuItem","NavMenuLink","UserAccount","Dropdown","avatar","dropdown","useAppDispatch","useAppSelector","httpAdapter","clearUser","showWithComponent","ErrorModal","NavBar","isAuth","userInfo","state","auth","dispatch","handleLogout","data","error","logout","message","success","username"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {\r\n  Nav,\r\n  NavbarContainer,\r\n  NavLogo,\r\n  UserSection,\r\n  UserAvatar,\r\n  UserInfo,\r\n  UserInfoLink,\r\n  UserInfoContainer,\r\n  NavMenu,\r\n  NavMenuItem,\r\n  NavMenuLink,\r\n  UserAccount,\r\n  Dropdown,\r\n} from './NavBarElement';\r\nimport avatar from '../../assets/profile.jpg';\r\nimport dropdown from '../../assets/dropdown.png';\r\nimport withCondition from '../../hoc/withCondition';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hook';\r\nimport { RootState } from '../../store';\r\nimport { httpAdapter } from '../../adapter/http-request';\r\nimport { clearUser } from '../../store/auth/slice';\r\nimport { showWithComponent } from '../../store/Modal/slice';\r\nimport { ErrorModal } from '../../components/ErrorModal';\r\n\r\nconst NavBar = (): JSX.Element => {\r\n  const { isAuth, userInfo } = useAppSelector((state: RootState) => state.auth);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleLogout = async () => {\r\n    const { data, error } = await httpAdapter.logout();\r\n    if (error) {\r\n      dispatch(showWithComponent(<ErrorModal errorMessage={error.message} />));\r\n    }\r\n    if (data) {\r\n      if (data.success) dispatch(clearUser());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Nav>\r\n      <NavbarContainer>\r\n        <NavLogo to=\"/\">WeGomoku</NavLogo>\r\n        {isAuth && (\r\n          <>\r\n            <NavMenu>\r\n              <NavMenuItem>\r\n                <NavMenuLink to=\"/\">Home</NavMenuLink>\r\n              </NavMenuItem>\r\n              {/* <NavMenuItem>\r\n                <NavMenuLink to=\"/leaderboard\">Leaderboard</NavMenuLink>\r\n              </NavMenuItem> */}\r\n              <NavMenuItem>\r\n                <NavMenuLink to=\"/tournament\">Tournament</NavMenuLink>\r\n              </NavMenuItem>\r\n              <NavMenuItem>\r\n                <NavMenuLink to=\"/about\">About</NavMenuLink>\r\n              </NavMenuItem>\r\n            </NavMenu>\r\n            <UserSection>\r\n              <UserInfoLink to=\"/me\">\r\n                <UserInfoContainer>\r\n                  <UserAvatar src={avatar} />\r\n                  <UserInfo>{userInfo?.username}</UserInfo>\r\n                </UserInfoContainer>\r\n              </UserInfoLink>\r\n              {/* this will be drop down later, now just make it a logout button */}\r\n              <UserAccount>\r\n                <Dropdown src={dropdown} onClick={handleLogout} />\r\n              </UserAccount>\r\n            </UserSection>\r\n          </>\r\n        )}\r\n      </NavbarContainer>\r\n    </Nav>\r\n  );\r\n};\r\nexport default NavBar;\r\n"]},"metadata":{},"sourceType":"module"}